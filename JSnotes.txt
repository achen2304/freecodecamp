empty callback function: () => {}; 
implicit returns: (param) => condition;
ternary operator: const example = 
    condition ? "I'm true" : "I'm false"
optional chaining: Object?.value, When an object's value 
    can equal to null or undefined, use this so it returns 
    undefined or null instead of throwing error
===: first checks if both vars are same types, then equality
==: converts both var types to something common, then checks equality 

dot(.) notation: object.val1 - returns the value1 of object 
destructuring syntax: const { val1, val2 } = object;
    sets val1 & val2 to the object's val1 & val2

syntax stuff
array = [];
object = {};
switch (condition) {
    case1 "":
    break
    casex "";
    break
}
array.forEach(method): iterates thru all of the array

string.split(""): splits up a string based on the input value into an array of smaller strings
string.reverse(): reverses the split string
string.join(""): recreates the string pieces into one string
array.splice(startIndex, numElements, replacementText)

Object.freeze("object-name"): makes the objects unchangable

regex method: 

document.getElementById("");
element|const js|.addEventListener("event", () => action);
    types of events: click, submit, 
    2nd param could also be a previously made method
alert("text"): shows pop up on screen ("")

localStorage.method("key", value);
    setItem("key", value):save item
    getItem("key"); retrieves item
    removeItem("key")
    clear(): deletes all 
JSON.stringify(value) --> in the second param of localstorage
JSON.parse(localStorage.method()) --> view in original form